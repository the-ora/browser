name: Lint and Formating

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: macos-14
    
    strategy:
      matrix:
        xcode: ['15.0']
    
    steps:
    - name: Check architecture
      run: uname -m
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: Show Swift version
      run: swift --version

    - name: Install Xcodegen
      run: brew install xcodegen

    - name: Generate Xcode project
      run: xcodegen

    - name: Install Swiftlint
      run: brew install swiftlint

    - name: Run Swiftlint
      run: swiftlint lint

    - name: Install Xcbeautify
      run: brew install xcbeautify

    - name: Clean build folder
      run: xcodebuild clean -scheme ora -project Ora.xcodeproj
    
    - name: Cache SPM dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Caches/org.swift.swiftpm/
          ~/.swiftpm/
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Resolve dependencies
      run: xcodebuild -resolvePackageDependencies
    
    # - name: Build project
    #   run: |
    #     chmod +x xcbuild-debug.sh
    #     ./xcbuild-debug.sh
    
    # - name: Run tests
    #   run: |
    #     xcodebuild test \
    #       -scheme ora \
    #       -destination "platform=macOS" \
    #       -configuration Debug \
    #       CODE_SIGN_IDENTITY="" \
    #       CODE_SIGNING_REQUIRED=NO \
    #       -enableCodeCoverage YES \
    #       -resultBundlePath TestResults
    
    # - name: Upload test results
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: test-results
    #     path: TestResults.xcresult
    
    # - name: Generate code coverage report
    #   run: |
    #     xcrun xccov view --report --json TestResults.xcresult > coverage.json
    #     xcrun xccov view --report TestResults.xcresult
    
    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     files: ./coverage.json
    #     fail_ci_if_error: false